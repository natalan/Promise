/*!
 *  JavaScript Promise
 *  @author Andrei Zharau & Sasha Malahov
 *  @license Released under the MIT license
 *
 *  https://github.com/natalan/Promise
 */
(function(a){var d=-1,g=0,b=1,e=Object.create,f=Array.isArray||function(k){return toString.call(k)=="[object Array]"};var i=function(){},h=function(k){return this.complete("resolve",k)},j=function(k){return this.complete("reject",k)},c=function(k){return{writable:false,configurable:false,enumerable:true,value:k}};a.Promise=function(){var D=[],u=function(F){F.status=function(){return y};F.value=function(){return p};return F},y=g,p,t=c(j),n=c(h),l=c(function(){return u(e(a.Promise.prototype,{then:q,always:E,done:o,fail:C}))}),z=c(function(I,F){var H,G=0;if(this.status()!==0){throw new Error("Promise already completed. Status: "+this.status())}y=(I==="resolve")?b:d;p=F;while(H=D[G++]){H[I]&&H[I](F)}D.splice(0,D.length);return this}),E=c(function(F){return this.then(F,F)}),q=c(function(G,H){if(typeof G!=="function"){throw new Error("Success argument is required!")}H=(H==null)?i:H;var F=new a.Promise;if(this.isResolved()){F.resolve(G(this.value()))}else{if(this.isRejected()){F.reject(H(this.value()))}else{if(this.isPending()){D.push({resolve:function(J){var I=G(J);if(I instanceof a.Promise){I.then(function(K){F.resolve(K)},function(K){F.reject(K)})}else{F.resolve(I)}},reject:function(J){var I=H(J);if(I instanceof a.Promise){I.then(function(K){F.resolve(K)},function(K){F.reject(K)})}else{F.reject(I)}}})}}}return F}),o=c(function(F){this.then(F,i);return this}),C=c(function(F){this.then(i,F);return this}),x=function(){var F=e(a.Promise.prototype,{reject:t,resolve:n,then:q,always:E,complete:z,limited:l,done:o,fail:C});return u(F)},w=x(),m=arguments;if(m.length){var B=[].slice.call(f(m[0])?m[0]:m),s=B.length,k=new Array(B.length),r=function(F){return function(G){k[F]=G;if(!(--s)){w.resolve(k)}}};for(var A=0;A<B.length;A++){if(B[A] instanceof a.Promise){B[A].then(r(A),function v(F){(w.status()===g)&&w.reject(F)})}else{r(A)(B[A])}}}m=null;return w};a.Promise.prototype={isResolved:function(){return this.status()===b},isRejected:function(){return this.status()===d},isPending:function(){return this.status()===g},success:function(){return this.done.apply(this,arguments)},error:function(){return this.fail.apply(this,arguments)}};if(typeof exports!=="undefined"){if(typeof module!=="undefined"&&module.exports){exports=module.exports=a.Promise}exports.Promise=a.Promise}})(this);