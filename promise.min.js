/*!
 *  JavaScript Promise
 *  @author Andrei Zharau & Sasha Malahov
 *  @license Released under the MIT license
 *
 *  https://github.com/natalan/Promise
 */
(function(a){var d=-1,f=0,b=1,e=Object.create;var h=function(){},g=function(j){return this.complete("resolve",j)},i=function(j){return this.complete("reject",j)},c=function(j){return{writable:false,configurable:false,enumerable:true,value:j}};a.Promise=function(){var C=[],t=function(E){E.status=function(){return x};E.value=function(){return n};return E},x=f,n,s=c(i),m=c(g),k=c(function(){return t(e(a.Promise.prototype,{then:p,always:D,success:A,error:o}))}),y=c(function(H,E){var G,F=0;if(this.status()!==0){throw new Error("Promise already completed. Status: "+this.status())}x=(H==="resolve")?b:d;n=E;while(G=C[F++]){G[H]&&G[H](E)}C.splice(0,C.length);return this}),D=c(function(E){return this.then(E,E)}),p=c(function(E,F){if(this.isResolved()){E(this.value())}else{if(this.isRejected()){F(this.value())}else{if(this.isPending()){C.push({resolve:E,reject:F})}}}return this}),A=c(function(E){return this.then(E,h)}),o=c(function(E){return this.then(E,h)}),w=function(){var E=e(a.Promise.prototype,{reject:s,resolve:m,then:p,always:D,complete:y,limited:k,success:A,error:o});return t(E)},v=w(),l=arguments;if(l.length){var B=[].slice.call(l),r=0,j=new Array(B.length),q=function(E,F){return function(G){j[E]=G;if(!(--r)){v.resolve(j)}}};for(var z=0;z<B.length;z++){if(B[z] instanceof Promise){r=r+1;B[z].then(q(z,value),function u(E){v.reject(E)})}}return v.limited()}else{return v}};a.Promise.prototype={isResolved:function(){return this.status()===b},isRejected:function(){return this.status()===d},isPending:function(){return this.status()===f}}})(this);